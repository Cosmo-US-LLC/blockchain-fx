name: Deploy React App to GoDaddy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # Adjust the Node.js version if needed

      - name: Install Dependencies
        run: |
          echo "Installing dependencies..."
          npm install

      - name: Build React App
        run: |
          echo "Building React app..."
          npm run build

      - name: List Build Directory
        run: |
          echo "Listing build directory:"
          ls -la build/

      - name: Compress Build Folder
        run: |
          echo "Compressing build folder..."
          zip -r build.zip build/
          echo "Zip file created successfully!"

      - name: Verify Zip File
        run: |
          echo "Verifying the zip file:"
          ls -lh build.zip

      - name: Deploy to GoDaddy via SCP
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GODADDY_HOST }}
          username: ${{ secrets.GODADDY_USERNAME }}
          key: ${{ secrets.GODADDY_PRIVATE_KEY }}
          port: 22
          script: |
            export TERM=xterm  # âœ… Fix the TERM issue
            cd /home/${{ secrets.GODADDY_USERNAME }}
            rm -rf public_html/*
            scp -i ~/.ssh/id_rsa -P 22 build.tar.gz ${{ secrets.GODADDY_USERNAME }}@${{ secrets.GODADDY_HOST }}:/home/${{ secrets.GODADDY_USERNAME }}/public_html
            cd /home/${{ secrets.GODADDY_USERNAME }}/public_html
            tar -xzvf build.tar.gz
            rm build.tar.gz

      - name: SSH into GoDaddy and Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.GODADDY_HOST }}
          username: ${{ secrets.GODADDY_USER }}
          key: ${{ secrets.GODADDY_PRIVATE_KEY }}
          script: |
            echo "Connected to GoDaddy server."
            cd ${{ secrets.GODADDY_PUBLIC_HTML }}
            
            echo "Before cleanup, listing directory contents:"
            ls -la
            
            echo "Deleting old files (excluding .htaccess)..."
            find . -mindepth 1 ! -name ".htaccess" -delete
            
            echo "After cleanup, listing directory contents:"
            ls -la
            
            echo "Extracting new build..."
            unzip build.zip
            
            echo "Moving build files to public_html root..."
            mv build/* .
            
            echo "Cleaning up extracted build folder and zip file..."
            rm -rf build build.zip
            
            echo "Final directory contents after deployment:"
            ls -la
            
            echo "Deployment successful!"
